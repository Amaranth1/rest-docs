buildscript {

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.4.RELEASE")
    }
}

plugins {
    id 'java'
    id 'org.gradle.application'
}
apply plugin: 'org.springframework.boot'

configurations {
    all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}
dependencies {
    testImplementation 'junit:junit:4.12'
    implementation ('org.springframework.boot:spring-boot-starter-parent:2.0.4.RELEASE')
    implementation ('org.springframework.boot:spring-boot-starter-web:2.0.4.RELEASE')
    implementation ('org.springframework.boot:spring-boot-starter-thymeleaf:2.0.4.RELEASE')
    implementation ('io.github.swagger2markup:swagger2markup:1.3.3')
    implementation ('org.asciidoctor:asciidoctorj:1.5.6')
    implementation ('org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.11')
    implementation ('org.springframework.boot:spring-boot-starter-log4j2:2.0.4.RELEASE')
}



plugins.withType(JavaPlugin) {
    archivesBaseName = jarName
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    compileJava {
        options.encoding = 'UTF-8'
    }

    jar {
        manifest {
            attributes(
                'Implementation-Title': title,
                'Implementation-Version': version,
                'Main-Class': mainClass
            )
        }
    }
}

plugins.withType(ApplicationPlugin) {
    mainClassName = mainClass
}


run {
    if(project.hasProperty("generatePdf")){
        args Eval.me(generatePdf)
    }
}


