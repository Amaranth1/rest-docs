swagger: "2.0"
info:
  version: "1.0.0"
  title: "VAP Account Service API Interface"
  termsOfService: "https://www.ncs.com.sg/terms-conditions"
tags:
- name: "Authorization"
  description: "Authorization API"
- name: "Users"
  description: "Access users API"
- name: "Roles"
  description: "Access roles API"
- name: "Resources"
  description: "Access resources API"
- name: "Password Policy"
  description: "Password policy API"
paths:
  /auth/token:
    post:
      tags:
      - "Authorization"
      summary: "Get access token or refresh token. This API is based on OpenID Connect Standard"
      produces:
      - "application/json"
      consumes:
        - application/x-www-form-urlencoded
      parameters:
      - name: "username"
        in: "formData"
        description: "login username. (only applicable when grant_type=password)"
        required: true
        type: "string"
      - name: "password"
        in: "formData"
        description: "login password. (only applicable when grant_type=password)"
        required: true
        type: "string"
      - name: "refresh_token"
        in: "formData"
        description: "refresh token for getting new Access Token. (only applicable when grant_type=refresh_token)"
        required: true
        type: "string"
      - name: "grant_type"
        in: "formData"
        description: "login grant type (password, refresh_token). Default: password"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/AccessTokenApiResponse"
        400:
          description: "Missing input"
          schema:
            $ref: "#/definitions/ErrorApiResponse"
        401:
          description: "Authentication Failed. Other 4xx errors are not shown"
          schema:
            $ref: "#/definitions/ErrorApiResponse"
        500:
          description: "Internal Error. Other 5xx errors are not shown"
          schema:
            $ref: "#/definitions/ErrorApiResponse"
  /auth/logout:
    post:
      tags:
      - "Authorization"
      summary: "Expiry the access token. This API is based on OpenID Connect Standard"
      produces:
      - "application/json"
      consumes:
        - application/x-www-form-urlencoded
      parameters:
      - name: "refresh_token"
        in: "formData"
        description: "refresh token for expiry the Token."
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
        400:
          description: "Missing input"
          schema:
            $ref: "#/definitions/ErrorApiResponse"
        401:
          description: "Authentication Failed. Other 4xx errors are not shown"
          schema:
            $ref: "#/definitions/ErrorApiResponse"
        500:
          description: "Internal Error. Other 5xx errors are not shown"
          schema:
            $ref: "#/definitions/ErrorApiResponse"
  /users:
    get:
      tags:
      - "Users"
      summary: "Get all available users"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GetUserResponse"
    post:
      tags:
      - "Users"
      summary: "Create user"
      produces:
      - "application/json"
      parameters:
      - in: 'body'
        name: 'body'
        description: 'Created user object'
        required: true
        schema:
          $ref: "#/definitions/AddUserModel"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
        400:
          description: "Bad Request. Other 4xx errors are not shown"
          schema:
            $ref: "#/definitions/ErrorApiResponse"
        500:
          description: "Internal Error. Other 5xx errors are not shown"
          schema:
            $ref: "#/definitions/ErrorApiResponse"
  /users/{user-id}:
    get:
      tags:
      - "Users"
      summary: "Get user by user id"
      produces:
      - "application/json"
      parameters:
      - name: "user-id"
        in: "path"
        description: "ID of user that needs to be fetched"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetUserResponse"
        400:
          description: "Bad Request. Other 4xx errors are not shown"
          schema:
            $ref: "#/definitions/ErrorApiResponse"
    put:
      tags:
      - "Users"
      summary: "Update user by user id"
      produces:
      - "application/json"
      parameters:
      - name: "user-id"
        in: "path"
        description: "ID of user that needs to be fetched"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Updated user object"
        required: true
        schema:
          $ref: "#/definitions/UpdateUserModel"
      responses:
        200:
          description: "successful operation"
        400:
          description: "Bad Request. Other 4xx errors are not shown"
          schema:
            $ref: "#/definitions/ErrorApiResponse"
        500:
          description: "Internal Error. Other 5xx errors are not shown"
          schema:
            $ref: "#/definitions/ErrorApiResponse"
    delete:
      tags:
      - "Users"
      summary: "Delete purchase user by ID"
      produces:
      - "application/json"
      parameters:
      - name: "user-id"
        in: "path"
        description: "ID of the user that needs to be deleted"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
        400:
          description: "Bad Request. Other 4xx errors are not shown"
          schema:
            $ref: "#/definitions/ErrorApiResponse"
        500:
          description: "Internal Error. Other 5xx errors are not shown"
          schema:
            $ref: "#/definitions/ErrorApiResponse"
  /users/password/forgot:
    post:
      tags:
      - "Users"
      summary: "Forgot password"
      produces:
      - "application/json"
      consumes:
        - "application/x-www-form-urlencoded"
      parameters:
      - name: "username"
        in: "formData"
        description: "user's username or email address"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ForgotPasswordResponse"
        400:
          description: "Bad Request. Other 4xx errors are not shown"
          schema:
            $ref: "#/definitions/ErrorApiResponse"
        500:
          description: "Internal Error. Other 5xx errors are not shown"
          schema:
            $ref: "#/definitions/ErrorApiResponse"
  /users/password/reset:
    put:
      tags:
      - "Users"
      summary: "Reset user password"
      produces:
      - "application/json"
      consumes:
        - "application/x-www-form-urlencoded"
      parameters:
      - name: "user-id"
        in: "formData"
        description: "ID of the user that needs to be reseted"
        required: true
        type: "string"
      - name: "token"
        in: "formData"
        description: "This is a credential to ensure that the user has the right to do this action(token from forgot password api return, default expired time is 3 hours)"
        required: true
        type: "string"
      - name: "new-password"
        in: "formData"
        description: "New password"
        required: true
        type: "string"
      - name: "confirmed-password"
        in: "formData"
        description: "Confirmed password"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
        400:
          description: "Bad Request. Other 4xx errors are not shown"
          schema:
            $ref: "#/definitions/ErrorApiResponse"
        500:
          description: "Internal Error. Other 5xx errors are not shown"
          schema:
            $ref: "#/definitions/ErrorApiResponse"
  /users/apikey:
    get:
      tags:
      - "Users"
      summary: "Get user api key"
      produces:
      - "application/json"
      parameters:
      - name: "x-user-id"
        in: "header"
        description: "ID of the current session user"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ApiKeyApiResponse"
        404:
          description: "User/API Key Not Found. Other 4xx errors are not shown"
          schema:
            $ref: "#/definitions/ErrorApiResponse"
    post:
      tags:
      - "Users"
      summary: "Generate user api key"
      produces:
      - "application/json"
      parameters:
      - name: "x-user-id"
        in: "header"
        description: "ID of the current session user"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ApiKeyApiResponse"
        404:
          description: "User Not Found. Other 4xx errors are not shown"
          schema:
            $ref: "#/definitions/ErrorApiResponse"
        409:
          description: "API Key is Existed. Other 4xx errors are not shown"
          schema:
            $ref: "#/definitions/ErrorApiResponse"
    delete:
      tags:
      - "Users"
      summary: "Remove user api key"
      produces:
      - "application/json"
      parameters:
      - name: "x-user-id"
        in: "header"
        description: "ID of the current session user"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
        404:
          description: "User/API Key Not Found. Other 4xx errors are not shown"
          schema:
            $ref: "#/definitions/ErrorApiResponse"
  /roles:
    get:
      tags:
      - "Roles"
      summary: "Get all available roles"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GetRoleResponse"
    post:
      tags:
      - "Roles"
      summary: "Create role"
      produces:
      - "application/json"
      parameters:
      - in: 'body'
        name: 'body'
        description: 'Created role object'
        required: true
        schema:
          $ref: "#/definitions/AddRoleModel"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
        400:
          description: "Bad Request. Other 4xx errors are not shown"
          schema:
            $ref: "#/definitions/ErrorApiResponse"
        500:
          description: "Internal Error. Other 5xx errors are not shown"
          schema:
            $ref: "#/definitions/ErrorApiResponse"
  /roles/{role-id}:
    get:
      tags:
      - "Roles"
      summary: "Get role by role id"
      produces:
      - "application/json"
      parameters:
      - name: "role-id"
        in: "path"
        description: "ID of role that needs to be fetched"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetRoleResponse"
        400:
          description: "Bad Request. Other 4xx errors are not shown"
          schema:
            $ref: "#/definitions/ErrorApiResponse"
    put:
      tags:
      - "Roles"
      summary: "Update role by role id"
      produces:
      - "application/json"
      parameters:
      - name: "role-id"
        in: "path"
        description: "ID of role that needs to be fetched"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Updated role object"
        required: true
        schema:
          $ref: "#/definitions/UpdateRoleModel"
      responses:
        200:
          description: "successful operation"
        400:
          description: "Bad Request. Other 4xx errors are not shown"
          schema:
            $ref: "#/definitions/ErrorApiResponse"
        500:
          description: "Internal Error. Other 5xx errors are not shown"
          schema:
            $ref: "#/definitions/ErrorApiResponse"
    delete:
      tags:
      - "Roles"
      summary: "Delete purchase role by ID"
      produces:
      - "application/json"
      parameters:
      - name: "role-id"
        in: "path"
        description: "ID of the role that needs to be deleted"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
        400:
          description: "Bad Request. Other 4xx errors are not shown"
          schema:
            $ref: "#/definitions/ErrorApiResponse"
        500:
          description: "Internal Error. Other 5xx errors are not shown"
          schema:
            $ref: "#/definitions/ErrorApiResponse"
  /resources:
    get:
      tags:
      - "Resources"
      summary: "Get available resources"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GetResourcesApiResponse"
  /policies:
    get:
      tags:
      - "Password Policy"
      summary: "Get password policies"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GetPasswordPolicyApiResponse"
    put:
      tags:
      - "Password Policy"
      summary: "Update password policy"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Updated password policy object"
        required: true
        schema:
          $ref: "#/definitions/UpdatePasswordPolicyModel"
      responses:
        200:
          description: "successful operation"
        400:
          description: "Bad Request. Other 4xx errors are not shown"
          schema:
            $ref: "#/definitions/ErrorApiResponse"
        500:
          description: "Internal Error. Other 5xx errors are not shown"
          schema:
            $ref: "#/definitions/ErrorApiResponse"

definitions:
  AddUserModel:
    type: "object"
    required:
      - "username"
      - "password"
    properties:
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      password:
        type: "string"
      email:
        type: "string"
      roles:
        type: "array"
        items:
          type: "string"
  UpdateUserModel:
    type: "object"
    required:
      - "id"
      - "username"
    properties:
      id:
        type: "string"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      roles:
        type: "array"
        items:
          type: "string"
  AddRoleModel:
    type: "object"
    required:
      - "name"
      - "level"
    properties:
      name:
        type: "string"
      level:
        type: "string"
        enum:
          - ADMIN
          - USER
      permissions:
        type: "array"
        items:
          $ref: "#/definitions/Permission"
      description:
        type: "string"
  UpdateRoleModel:
    type: "object"
    required:
      - "id"
      - "level"
      - "name"
    properties:
      id:
        type: "string"
      level:
        type: "string"
        enum:
          - ADMIN
          - USER
      name:
        type: "string"
      permissions:
        type: "array"
        items:
          $ref: "#/definitions/Permission"
      description:
        type: "string"
  UpdatePasswordPolicyModel:
    type: "object"
    required:
      - "type"
    properties:
      type:
        type: "string"
      value:
        type: "integer"
        format: "int32"
      enable:
        type: "boolean"
  Permission:
    type: "object"
    required:
      - "resourceName"
      - "level"
    properties:
      resourceName:
        type: "string"
      level:
        type: "string"
        enum:
        - "VIEW"
        - "MANAGE"
  GetUserResponse:
    type: "object"
    required:
      - "id"
      - "username"
    properties:
      id:
        type: "string"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      roles:
        type: "array"
        items:
          type: "string"
  GetRoleResponse:
    type: "object"
    required:
      - "id"
      - "level"
      - "name"
    properties:
      id:
        type: "string"
      level:
        type: "string"
        enum:
          - ADMIN
          - USER
      name:
        type: "string"
      permissions:
        type: "array"
        items:
          $ref: "#/definitions/Permission"
      description:
        type: "string"
  GetResourcesApiResponse:
    type: "object"
    required:
      - "name"
      - "path"
    properties:
      name:
        type: "string"
      path:
        type: "string"
  GetPasswordPolicyApiResponse:
    type: "object"
    required:
      - "type"
      - "value"
      - "enable"
    properties:
      type:
        type: "string"
      value:
        type: "integer"
        format: "int32"
      enable:
        type: "boolean"
  ForgotPasswordResponse:
    type: "object"
    required:
      - "token"
      - "userId"
      - "expiredTime"
    properties:
      token:
        type: "string"
      userId:
        type: "string"
      expiredTime:
        type: "integer"
        format: "int64"
  ApiKeyApiResponse:
    type: "object"
    required:
      - "key"
      - "userId"
      - "expiryTime"
    properties:
      key:
        type: "string"
      userId:
        type: "string"
      expiryTime:
        type: "integer"
        format: "int64"
  AccessTokenApiResponse:
    type: "object"
    required:
      - "access_token"
      - "refresh_token"
      - "refresh_expires_in"
      - "token_type"
      - "session_state"
      - "expires_in"
    properties:
      access_token:
        type: "string"
      refresh_token:
        type: "string"
      refresh_expires_in:
        type: "integer"
        format: "int64"
      token_type:
        type: "string"
      session_state:
        type: "string"
      expires_in:
        type: "integer"
        format: "int64"
  ErrorApiResponse:
    type: "object"
    required:
      - "key"
      - "statusCode"
      - "serviceName"
      - "message"
      - "time"
    properties:
      key:
        type: "string"
      statusCode:
        type: "integer"
        format: "int32"
      serviceName:
        type: "string"
      message:
        type: "string"
      time:
        type: "integer"
        format: "int64"